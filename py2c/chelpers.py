# Python helper for cpp generation

# pregen
cpprelude = """// Generated by pycer
#include <iostream>
#include <string>
using namespace std;
#define ptr(type, value) ((type *) (value))
#define REF(value) &value
#define REF_DEF(name, value) &name = value
#define str(value) to_string(value)
#define int(value) stoi(value)
"""

# print
cpprelude += """// Variadic template function
void print() {
    cout << endl;
}

// Variadic template function
template<typename T, typename... Args>
void print(T first, Args... args) {
    cout << first << " ";  // Print the first argument
    print(args...);             // Recur with the remaining arguments
}

// Single argument case: When only one argument remains
template<typename T>
void print(T first) {
    cout << first << endl;  // Print the last argument and end the line
}
"""

#input
cpprelude += """
// input
template<typename T>
void input(const string prompt, T *ptr) {
    cout << prompt;
    cin >> *ptr;
}
"""